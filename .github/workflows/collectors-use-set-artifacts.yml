name: Publish artifact [snowpark_checkpoints_collector]

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write

env:
  PYTHON_VERSION: "3.11"

jobs:
  artifacts:
    name: Create artifacts
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: ${{ inputs.artifact-name }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      - name: Get version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}
            echo "version=$VERSION"
          else
            echo "GIT REF is not a tag"
            VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
            VERSION=${VERSION#v}
            echo "version=$VERSION"
          fi

          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(rc[0-9]+)?$ ]]; then
            echo "version=$VERSION"
            echo "Error: No version found"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set Version
        run: |
          set -e
          echo "Current directory: $PWD" && ls -l
          echo "Updating pip file ${FILE_NAME} with version: ${NEW_VERSION}"
          find $(pwd) -name "${FILE_NAME}" -exec sh -c 'sed -i "s/{% set version = \".*\" %}/{% set version = \"${NEW_VERSION}\" %}/" "$1"' _ {} \;
        env:
          NEW_VERSION: ${{ steps.get_version.outputs.version }}
          FILE_NAME: __version__.py
        working-directory: ./snowpark-checkpoints-collectors

      - name: Get Version Info
        run: |
          echo "Displaying updated meta.yaml files:"
          find $(pwd) -name "${FILE_NAME}" -exec sh -c 'echo "File: $1" && grep "__version__" $1' _ {} \;
        env:
          FILE_NAME: __version__.py
        working-directory: ./snowpark-checkpoints-collectors

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Install required tools
        run: |
          python -m pip install --upgrade pip -q
          pip install hatch -q

      - name: Generate wheel and sdist
        run: |
          hatch build
          echo "Current directory: $PWD" && ls -la dist
        working-directory: ./snowpark-checkpoints-collectors

      - name: Upload PR Artifact
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ./snowpark-checkpoints-collectors/dist/*
