name: Publish artifact [snowpark_checkpoints]

on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string

jobs:
  artifacts:
    name: Create artifacts
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: ${{ inputs.artifact-name }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install GitVersion.Tool
        run: |
          dotnet tool install --global GitVersion.Tool
          echo "export PATH=\$PATH:\$HOME/.dotnet/tools" >> $GITHUB_ENV

      - name: Generate Version with GitVersion
        id: gitversion
        run: |
          version_info=$(dotnet gitversion /output json /showvariable InformationalVersion)
          version_output=$(dotnet gitversion /output json /showvariable MajorMinorPatch)
          echo "Calculated Version: $version_output" && echo "Informational Version: $version_info"
          echo "version=$version_output" >> $GITHUB_OUTPUT
        env:
          DOTNET_ROOT: $HOME/.dotnet

      - name: Update Version
        run: |
          sed -i "s/^version = \".*\"/version = \"${NEW_VERSION}\"/" pyproject.toml
          echo "Package Version updated:"
          grep "version = " pyproject.toml
        env:
          NEW_VERSION: ${{ steps.gitversion.outputs.version }}
        working-directory: ./snowpark-checkpoints

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install required tools
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Generate wheel and sdist
        run: |
          hatch build
          echo "Current directory: $PWD" && ls -la dist
        working-directory: ./snowpark-checkpoints

      - name: Upload PR Artifact
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ./snowpark-checkpoints/dist/*
