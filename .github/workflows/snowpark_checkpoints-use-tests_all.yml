name: Run tests [snowpark_checkpoints]

on:
  workflow_call:

jobs:
  test:
    name: Test ${{ matrix.download_name }}-${{ matrix.python-version }}-${{ matrix.cloud-provider }}
    runs-on: ${{ matrix.os }}
    env:
      TERM: unknown
      SNOWFLAKE_CONNECTIONS_JWT_AUTHENTICATOR: SNOWFLAKE_JWT
      SNOWFLAKE_CONNECTIONS_JWT_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_CONNECTIONS_JWT_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_CONNECTIONS_JWT_PRIVATE_KEY_RAW: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.10"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: linux
          - os: ubuntu-latest
            python-version: "3.11"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: linux
          - os: ubuntu-latest
            python-version: "3.12"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: linux
          - os: macos-latest
            python-version: "3.10"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: macos
          - os: macos-latest
            python-version: "3.11"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: macos
          - os: macos-latest
            python-version: "3.12"
            cloud-provider: aws
            snow_cli_version: "3.2.0"
            download_name: macos

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          check-latest: true
      - run: java --version

      - name: Display Python version
        run: |
          python -c "import sys; print(sys.version)"
          python ../.github/scripts/py_show_env.py
        shell: bash
        working-directory: ./snowpark-checkpoints

      - name: Set up Snowflake CLI
        uses: Snowflake-Labs/snowflake-cli-action@v1.5
        with:
          cli-version: ${{ matrix.snow_cli_version }}
          default-config-file-path: "../.github/workflows/config/config.toml"
        working-directory: ./snowpark-checkpoints

      - name: Test Snowflake CLI
        run: |
          snow --info
          snow --version
          snow connection test -c jwt | grep Status
          snow sql -q " Select current_organization_name(); select current_account_name();" -c jwt

      - name: Install required tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install ".[development]"
          pip install hatch pyyaml frictionless requests
          pip list
        shell: bash
        working-directory: ./snowpark-checkpoints

      - name: Display Host Info
        run: |
          python ../.github/scripts/py_show_host.py
        shell: bash
        working-directory: ./snowpark-checkpoints

      - name: Run Tests [Skipped]
        run: |
          echo "Current working directory: $PWD"
          hatch config set dirs.env.virtual .hatch
          hatch --version
          hatch status
          hatch env show
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          cloud_provider: ${{ matrix.cloud-provider }}
          PYTEST_ADDOPTS: --color=yes --tb=short -v
          COVERAGE_THRESHOLD: 83
        shell: bash
        working-directory: ./snowpark-checkpoints
